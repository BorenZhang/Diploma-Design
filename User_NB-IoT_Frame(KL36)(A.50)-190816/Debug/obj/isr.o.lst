   1              		.cpu cortex-m0plus
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"isr.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.GPIOA_Handler,"ax",%progbits
  16              		.align	1
  17              		.weak	GPIOA_Handler
  18              		.syntax unified
  19              		.code	16
  20              		.thumb_func
  21              		.fpu softvfp
  23              	GPIOA_Handler:
  24              	.LFB38:
  25              		.file 1 "srcc/isr.c"
   1:srcc/isr.c    **** //=====================================================================
   2:srcc/isr.c    **** //文件名称：isr.c（中断处理程序源文件）
   3:srcc/isr.c    **** //框架提供：苏大arm技术中心(sumcu.suda.edu.cn)
   4:srcc/isr.c    **** //版本更新：2017.01：1.0；2019.02：A.12
   5:srcc/isr.c    **** //功能描述：提供中断处理程序编程框架
   6:srcc/isr.c    **** //=====================================================================
   7:srcc/isr.c    **** #include "includes.h"
   8:srcc/isr.c    **** 
   9:srcc/isr.c    **** //======================================================================
  10:srcc/isr.c    **** //程序名称：GPIOA组输入引脚中断处理程序
  11:srcc/isr.c    **** //触发条件：GPIOA引脚开关量输入变化触发，至于是何种变化触发，由初始化确定
  12:srcc/isr.c    **** //备    注：进入后，可使用gpio_get_int函数判断哪个引脚触发的中断
  13:srcc/isr.c    **** //         （1-引脚有GPIO中断，0-引脚无GPIO中断）
  14:srcc/isr.c    **** //======================================================================
  15:srcc/isr.c    **** void GPIOA_Handler(void)
  16:srcc/isr.c    **** {
  26              		.loc 1 16 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              		@ link register save eliminated.
  31              	.LBB50:
  32              	.LBB51:
  33              		.file 2 "E:\\AHL-AN10-Kit01\\AHL-AN10-Kit01(V2.0)-190817\\04-Software\\01-UE\\USER\\User_NB-IoT_Fr
   1:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** /**************************************************************************//**
   2:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h ****  * @file     core_cmFunc.h
   3:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h ****  * @brief    CMSIS Cortex-M Core Function Access Header File
   4:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h ****  * @version  V4.10
   5:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h ****  * @date     18. March 2015
   6:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h ****  *
   7:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h ****  * @note
   8:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h ****  *
   9:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h ****  ******************************************************************************/
  10:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** /* Copyright (c) 2009 - 2015 ARM LIMITED
  11:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** 
  12:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h ****    All rights reserved.
  13:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h ****    Redistribution and use in source and binary forms, with or without
  14:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h ****    modification, are permitted provided that the following conditions are met:
  15:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h ****    - Redistributions of source code must retain the above copyright
  16:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h ****      notice, this list of conditions and the following disclaimer.
  17:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h ****    - Redistributions in binary form must reproduce the above copyright
  18:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h ****      notice, this list of conditions and the following disclaimer in the
  19:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h ****      documentation and/or other materials provided with the distribution.
  20:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h ****    - Neither the name of ARM nor the names of its contributors may be used
  21:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h ****      to endorse or promote products derived from this software without
  22:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h ****      specific prior written permission.
  23:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h ****    *
  24:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h ****    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  25:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h ****    AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  26:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h ****    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  27:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h ****    ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS AND CONTRIBUTORS BE
  28:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h ****    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  29:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h ****    CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  30:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h ****    SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  31:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h ****    INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  32:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h ****    CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  33:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h ****    ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  34:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h ****    POSSIBILITY OF SUCH DAMAGE.
  35:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h ****    ---------------------------------------------------------------------------*/
  36:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** 
  37:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** 
  38:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** #ifndef __CORE_CMFUNC_H
  39:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** #define __CORE_CMFUNC_H
  40:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** 
  41:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** 
  42:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** /* ###########################  Core Function Access  ########################### */
  43:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
  44:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
  45:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h ****   @{
  46:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h ****  */
  47:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** 
  48:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** #if   defined ( __CC_ARM ) /*------------------RealView Compiler -----------------*/
  49:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** /* ARM armcc specific functions */
  50:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** 
  51:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** #if (__ARMCC_VERSION < 400677)
  52:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h ****   #error "Please use ARM Compiler Toolchain V4.0.677 or later!"
  53:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** #endif
  54:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** 
  55:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** /* intrinsic void __enable_irq();     */
  56:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** /* intrinsic void __disable_irq();    */
  57:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** 
  58:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** /** \brief  Get Control Register
  59:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** 
  60:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h ****     This function returns the content of the Control Register.
  61:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** 
  62:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h ****     \return               Control Register value
  63:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h ****  */
  64:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** __STATIC_INLINE uint32_t __get_CONTROL(void)
  65:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** {
  66:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h ****   register uint32_t __regControl         __ASM("control");
  67:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h ****   return(__regControl);
  68:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** }
  69:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** 
  70:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** 
  71:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** /** \brief  Set Control Register
  72:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** 
  73:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h ****     This function writes the given value to the Control Register.
  74:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** 
  75:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h ****     \param [in]    control  Control Register value to set
  76:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h ****  */
  77:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** __STATIC_INLINE void __set_CONTROL(uint32_t control)
  78:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** {
  79:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h ****   register uint32_t __regControl         __ASM("control");
  80:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h ****   __regControl = control;
  81:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** }
  82:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** 
  83:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** 
  84:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** /** \brief  Get IPSR Register
  85:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** 
  86:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h ****     This function returns the content of the IPSR Register.
  87:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** 
  88:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h ****     \return               IPSR Register value
  89:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h ****  */
  90:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** __STATIC_INLINE uint32_t __get_IPSR(void)
  91:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** {
  92:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h ****   register uint32_t __regIPSR          __ASM("ipsr");
  93:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h ****   return(__regIPSR);
  94:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** }
  95:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** 
  96:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** 
  97:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** /** \brief  Get APSR Register
  98:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** 
  99:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h ****     This function returns the content of the APSR Register.
 100:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** 
 101:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h ****     \return               APSR Register value
 102:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h ****  */
 103:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** __STATIC_INLINE uint32_t __get_APSR(void)
 104:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** {
 105:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h ****   register uint32_t __regAPSR          __ASM("apsr");
 106:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h ****   return(__regAPSR);
 107:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** }
 108:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** 
 109:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** 
 110:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** /** \brief  Get xPSR Register
 111:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** 
 112:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h ****     This function returns the content of the xPSR Register.
 113:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** 
 114:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h ****     \return               xPSR Register value
 115:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h ****  */
 116:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** __STATIC_INLINE uint32_t __get_xPSR(void)
 117:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** {
 118:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h ****   register uint32_t __regXPSR          __ASM("xpsr");
 119:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h ****   return(__regXPSR);
 120:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** }
 121:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** 
 122:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** 
 123:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** /** \brief  Get Process Stack Pointer
 124:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** 
 125:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h ****     This function returns the current value of the Process Stack Pointer (PSP).
 126:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** 
 127:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h ****     \return               PSP Register value
 128:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h ****  */
 129:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** __STATIC_INLINE uint32_t __get_PSP(void)
 130:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** {
 131:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h ****   register uint32_t __regProcessStackPointer  __ASM("psp");
 132:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h ****   return(__regProcessStackPointer);
 133:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** }
 134:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** 
 135:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** 
 136:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** /** \brief  Set Process Stack Pointer
 137:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** 
 138:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h ****     This function assigns the given value to the Process Stack Pointer (PSP).
 139:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** 
 140:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h ****     \param [in]    topOfProcStack  Process Stack Pointer value to set
 141:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h ****  */
 142:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** __STATIC_INLINE void __set_PSP(uint32_t topOfProcStack)
 143:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** {
 144:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h ****   register uint32_t __regProcessStackPointer  __ASM("psp");
 145:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h ****   __regProcessStackPointer = topOfProcStack;
 146:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** }
 147:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** 
 148:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** 
 149:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** /** \brief  Get Main Stack Pointer
 150:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** 
 151:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h ****     This function returns the current value of the Main Stack Pointer (MSP).
 152:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** 
 153:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h ****     \return               MSP Register value
 154:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h ****  */
 155:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** __STATIC_INLINE uint32_t __get_MSP(void)
 156:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** {
 157:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h ****   register uint32_t __regMainStackPointer     __ASM("msp");
 158:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h ****   return(__regMainStackPointer);
 159:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** }
 160:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** 
 161:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** 
 162:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** /** \brief  Set Main Stack Pointer
 163:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** 
 164:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h ****     This function assigns the given value to the Main Stack Pointer (MSP).
 165:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** 
 166:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h ****     \param [in]    topOfMainStack  Main Stack Pointer value to set
 167:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h ****  */
 168:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** __STATIC_INLINE void __set_MSP(uint32_t topOfMainStack)
 169:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** {
 170:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h ****   register uint32_t __regMainStackPointer     __ASM("msp");
 171:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h ****   __regMainStackPointer = topOfMainStack;
 172:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** }
 173:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** 
 174:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** 
 175:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** /** \brief  Get Priority Mask
 176:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** 
 177:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h ****     This function returns the current state of the priority mask bit from the Priority Mask Registe
 178:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** 
 179:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h ****     \return               Priority Mask value
 180:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h ****  */
 181:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** __STATIC_INLINE uint32_t __get_PRIMASK(void)
 182:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** {
 183:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h ****   register uint32_t __regPriMask         __ASM("primask");
 184:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h ****   return(__regPriMask);
 185:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** }
 186:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** 
 187:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** 
 188:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** /** \brief  Set Priority Mask
 189:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** 
 190:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h ****     This function assigns the given value to the Priority Mask Register.
 191:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** 
 192:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h ****     \param [in]    priMask  Priority Mask
 193:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h ****  */
 194:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** __STATIC_INLINE void __set_PRIMASK(uint32_t priMask)
 195:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** {
 196:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h ****   register uint32_t __regPriMask         __ASM("primask");
 197:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h ****   __regPriMask = (priMask);
 198:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** }
 199:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** 
 200:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** 
 201:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** #if       (__CORTEX_M >= 0x03) || (__CORTEX_SC >= 300)
 202:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** 
 203:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** /** \brief  Enable FIQ
 204:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** 
 205:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h ****     This function enables FIQ interrupts by clearing the F-bit in the CPSR.
 206:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h ****     Can only be executed in Privileged modes.
 207:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h ****  */
 208:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** #define __enable_fault_irq                __enable_fiq
 209:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** 
 210:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** 
 211:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** /** \brief  Disable FIQ
 212:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** 
 213:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h ****     This function disables FIQ interrupts by setting the F-bit in the CPSR.
 214:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h ****     Can only be executed in Privileged modes.
 215:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h ****  */
 216:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** #define __disable_fault_irq               __disable_fiq
 217:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** 
 218:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** 
 219:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** /** \brief  Get Base Priority
 220:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** 
 221:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h ****     This function returns the current value of the Base Priority register.
 222:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** 
 223:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h ****     \return               Base Priority register value
 224:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h ****  */
 225:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** __STATIC_INLINE uint32_t  __get_BASEPRI(void)
 226:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** {
 227:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h ****   register uint32_t __regBasePri         __ASM("basepri");
 228:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h ****   return(__regBasePri);
 229:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** }
 230:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** 
 231:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** 
 232:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** /** \brief  Set Base Priority
 233:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** 
 234:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h ****     This function assigns the given value to the Base Priority register.
 235:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** 
 236:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h ****     \param [in]    basePri  Base Priority value to set
 237:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h ****  */
 238:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** __STATIC_INLINE void __set_BASEPRI(uint32_t basePri)
 239:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** {
 240:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h ****   register uint32_t __regBasePri         __ASM("basepri");
 241:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h ****   __regBasePri = (basePri & 0xff);
 242:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** }
 243:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** 
 244:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** 
 245:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** /** \brief  Set Base Priority with condition
 246:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** 
 247:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h ****     This function assigns the given value to the Base Priority register only if BASEPRI masking is 
 248:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h ****     or the new value increases the BASEPRI priority level.
 249:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** 
 250:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h ****     \param [in]    basePri  Base Priority value to set
 251:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h ****  */
 252:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** __STATIC_INLINE void __set_BASEPRI_MAX(uint32_t basePri)
 253:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** {
 254:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h ****   register uint32_t __regBasePriMax      __ASM("basepri_max");
 255:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h ****   __regBasePriMax = (basePri & 0xff);
 256:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** }
 257:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** 
 258:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** 
 259:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** /** \brief  Get Fault Mask
 260:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** 
 261:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h ****     This function returns the current value of the Fault Mask register.
 262:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** 
 263:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h ****     \return               Fault Mask register value
 264:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h ****  */
 265:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** __STATIC_INLINE uint32_t __get_FAULTMASK(void)
 266:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** {
 267:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h ****   register uint32_t __regFaultMask       __ASM("faultmask");
 268:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h ****   return(__regFaultMask);
 269:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** }
 270:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** 
 271:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** 
 272:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** /** \brief  Set Fault Mask
 273:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** 
 274:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h ****     This function assigns the given value to the Fault Mask register.
 275:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** 
 276:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h ****     \param [in]    faultMask  Fault Mask value to set
 277:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h ****  */
 278:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** __STATIC_INLINE void __set_FAULTMASK(uint32_t faultMask)
 279:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** {
 280:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h ****   register uint32_t __regFaultMask       __ASM("faultmask");
 281:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h ****   __regFaultMask = (faultMask & (uint32_t)1);
 282:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** }
 283:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** 
 284:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** #endif /* (__CORTEX_M >= 0x03) || (__CORTEX_SC >= 300) */
 285:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** 
 286:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** 
 287:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** #if       (__CORTEX_M == 0x04) || (__CORTEX_M == 0x07)
 288:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** 
 289:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** /** \brief  Get FPSCR
 290:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** 
 291:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h ****     This function returns the current value of the Floating Point Status/Control register.
 292:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** 
 293:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h ****     \return               Floating Point Status/Control register value
 294:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h ****  */
 295:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** __STATIC_INLINE uint32_t __get_FPSCR(void)
 296:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** {
 297:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
 298:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h ****   register uint32_t __regfpscr         __ASM("fpscr");
 299:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h ****   return(__regfpscr);
 300:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** #else
 301:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h ****    return(0);
 302:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** #endif
 303:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** }
 304:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** 
 305:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** 
 306:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** /** \brief  Set FPSCR
 307:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** 
 308:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h ****     This function assigns the given value to the Floating Point Status/Control register.
 309:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** 
 310:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h ****     \param [in]    fpscr  Floating Point Status/Control value to set
 311:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h ****  */
 312:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** __STATIC_INLINE void __set_FPSCR(uint32_t fpscr)
 313:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** {
 314:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
 315:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h ****   register uint32_t __regfpscr         __ASM("fpscr");
 316:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h ****   __regfpscr = (fpscr);
 317:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** #endif
 318:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** }
 319:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** 
 320:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** #endif /* (__CORTEX_M == 0x04) || (__CORTEX_M == 0x07) */
 321:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** 
 322:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** 
 323:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** #elif defined ( __GNUC__ ) /*------------------ GNU Compiler ---------------------*/
 324:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** /* GNU gcc specific functions */
 325:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** 
 326:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** /** \brief  Enable IRQ Interrupts
 327:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** 
 328:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h ****   This function enables IRQ interrupts by clearing the I-bit in the CPSR.
 329:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h ****   Can only be executed in Privileged modes.
 330:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h ****  */
 331:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_irq(void)
 332:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** {
 333:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 334:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** }
 335:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** 
 336:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** 
 337:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** /** \brief  Disable IRQ Interrupts
 338:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** 
 339:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h ****   This function disables IRQ interrupts by setting the I-bit in the CPSR.
 340:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h ****   Can only be executed in Privileged modes.
 341:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h ****  */
 342:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_irq(void)
 343:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** {
 344:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  34              		.loc 2 344 0
  35              		.syntax divided
  36              	@ 344 "E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)
  37 0000 72B6     		cpsid i
  38              	@ 0 "" 2
  39              		.thumb
  40              		.syntax unified
  41              	.LBE51:
  42              	.LBE50:
  43              	.LBB52:
  44              	.LBB53:
 333:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** }
  45              		.loc 2 333 0
  46              		.syntax divided
  47              	@ 333 "E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)
  48 0002 62B6     		cpsie i
  49              	@ 0 "" 2
  50              		.thumb
  51              		.syntax unified
  52              	.LBE53:
  53              	.LBE52:
  17:srcc/isr.c    **** 	DISABLE_INTERRUPTS;     //关总中断
  18:srcc/isr.c    **** 	//------------------------------------------------------------------
  19:srcc/isr.c    **** 	//（在此处增加功能）
  20:srcc/isr.c    **** 
  21:srcc/isr.c    **** 	//------------------------------------------------------------------
  22:srcc/isr.c    **** 	ENABLE_INTERRUPTS;     //关总中断
  23:srcc/isr.c    **** }
  54              		.loc 1 23 0
  55              		@ sp needed
  56 0004 7047     		bx	lr
  57              		.cfi_endproc
  58              	.LFE38:
  60              		.section	.text.GPIOB_Handler,"ax",%progbits
  61              		.align	1
  62              		.weak	GPIOB_Handler
  63              		.syntax unified
  64              		.code	16
  65              		.thumb_func
  66              		.fpu softvfp
  68              	GPIOB_Handler:
  69              	.LFB39:
  24:srcc/isr.c    **** 
  25:srcc/isr.c    **** //======================================================================
  26:srcc/isr.c    **** //程序名称：GPIOB组输入引脚中断处理程序
  27:srcc/isr.c    **** //触发条件：GPIOB引脚开关量输入变化触发，至于是何种变化触发，由初始化确定
  28:srcc/isr.c    **** //备    注：进入后，可使用gpio_get_int函数判断哪个引脚触发的中断
  29:srcc/isr.c    **** //         （1-引脚有GPIO中断，0-引脚无GPIO中断）
  30:srcc/isr.c    **** //======================================================================
  31:srcc/isr.c    **** void GPIOB_Handler(void)
  32:srcc/isr.c    **** {
  70              		.loc 1 32 0
  71              		.cfi_startproc
  72              		@ args = 0, pretend = 0, frame = 0
  73              		@ frame_needed = 0, uses_anonymous_args = 0
  74              		@ link register save eliminated.
  75              	.LBB54:
  76              	.LBB55:
  77              		.loc 2 344 0
  78              		.syntax divided
  79              	@ 344 "E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)
  80 0000 72B6     		cpsid i
  81              	@ 0 "" 2
  82              		.thumb
  83              		.syntax unified
  84              	.LBE55:
  85              	.LBE54:
  86              	.LBB56:
  87              	.LBB57:
 333:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** }
  88              		.loc 2 333 0
  89              		.syntax divided
  90              	@ 333 "E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)
  91 0002 62B6     		cpsie i
  92              	@ 0 "" 2
  93              		.thumb
  94              		.syntax unified
  95              	.LBE57:
  96              	.LBE56:
  33:srcc/isr.c    **** 	DISABLE_INTERRUPTS;     //关总中断
  34:srcc/isr.c    **** 	//------------------------------------------------------------------
  35:srcc/isr.c    **** 	//（在此处增加功能）
  36:srcc/isr.c    **** 
  37:srcc/isr.c    **** 	//------------------------------------------------------------------
  38:srcc/isr.c    **** 	ENABLE_INTERRUPTS;     //关总中断
  39:srcc/isr.c    **** }
  97              		.loc 1 39 0
  98              		@ sp needed
  99 0004 7047     		bx	lr
 100              		.cfi_endproc
 101              	.LFE39:
 103              		.section	.text.UARTA_Handler,"ax",%progbits
 104              		.align	1
 105              		.weak	UARTA_Handler
 106              		.syntax unified
 107              		.code	16
 108              		.thumb_func
 109              		.fpu softvfp
 111              	UARTA_Handler:
 112              	.LFB40:
  40:srcc/isr.c    **** 
  41:srcc/isr.c    **** //======================================================================
  42:srcc/isr.c    **** //程序名称：UARTA接收中断处理程序
  43:srcc/isr.c    **** //触发条件：UARTA收到一个字节触发
  44:srcc/isr.c    **** //备    注：进入本程序后，可使用uart_get_re_int函数可再进行中断标志判断
  45:srcc/isr.c    **** //          （1-有UART接收中断，0-没有UART接收中断）
  46:srcc/isr.c    **** //======================================================================
  47:srcc/isr.c    **** void UARTA_Handler(void)
  48:srcc/isr.c    **** {
 113              		.loc 1 48 0
 114              		.cfi_startproc
 115              		@ args = 0, pretend = 0, frame = 8
 116              		@ frame_needed = 0, uses_anonymous_args = 0
 117 0000 10B5     		push	{r4, lr}
 118              		.cfi_def_cfa_offset 8
 119              		.cfi_offset 4, -8
 120              		.cfi_offset 14, -4
 121 0002 82B0     		sub	sp, sp, #8
 122              		.cfi_def_cfa_offset 16
 123              	.LBB58:
 124              	.LBB59:
 125              		.loc 2 344 0
 126              		.syntax divided
 127              	@ 344 "E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)
 128 0004 72B6     		cpsid i
 129              	@ 0 "" 2
 130              		.thumb
 131              		.syntax unified
 132              	.LBE59:
 133              	.LBE58:
  49:srcc/isr.c    **** 
  50:srcc/isr.c    **** 	uint_8 ch;
  51:srcc/isr.c    **** 	uint_8 flag;
  52:srcc/isr.c    **** 
  53:srcc/isr.c    **** 	DISABLE_INTERRUPTS;      //关总中断
  54:srcc/isr.c    **** 	//------------------------------------------------------------------
  55:srcc/isr.c    **** 	//接收一个字节
  56:srcc/isr.c    **** 	ch = uart_re1(UART_USER, &flag);   //调用接收一个字节的函数，清接收中断位
 134              		.loc 1 56 0
 135 0006 6B46     		mov	r3, sp
 136 0008 DC1D     		adds	r4, r3, #7
 137 000a 0B4B     		ldr	r3, .L5
 138 000c 1A68     		ldr	r2, [r3]
 139 000e 9E23     		movs	r3, #158
 140 0010 5B00     		lsls	r3, r3, #1
 141 0012 D358     		ldr	r3, [r2, r3]
 142 0014 2100     		movs	r1, r4
 143 0016 0020     		movs	r0, #0
 144 0018 9847     		blx	r3
 145              	.LVL0:
  57:srcc/isr.c    **** 	if(flag)   //有数据
 146              		.loc 1 57 0
 147 001a 2378     		ldrb	r3, [r4]
 148 001c 002B     		cmp	r3, #0
 149 001e 07D0     		beq	.L4
  58:srcc/isr.c    **** 	{
  59:srcc/isr.c    **** 		uart_send1(UART_USER,ch);//回发接收到的字节
 150              		.loc 1 59 0
 151 0020 054B     		ldr	r3, .L5
 152 0022 1A68     		ldr	r2, [r3]
 153 0024 9823     		movs	r3, #152
 154 0026 5B00     		lsls	r3, r3, #1
 155 0028 D358     		ldr	r3, [r2, r3]
 156 002a 0100     		movs	r1, r0
 157 002c 0020     		movs	r0, #0
 158              	.LVL1:
 159 002e 9847     		blx	r3
 160              	.LVL2:
 161              	.L4:
 162              	.LBB60:
 163              	.LBB61:
 333:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** }
 164              		.loc 2 333 0
 165              		.syntax divided
 166              	@ 333 "E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)
 167 0030 62B6     		cpsie i
 168              	@ 0 "" 2
 169              		.thumb
 170              		.syntax unified
 171              	.LBE61:
 172              	.LBE60:
  60:srcc/isr.c    **** 	}
  61:srcc/isr.c    **** 	//------------------------------------------------------------------
  62:srcc/isr.c    **** 	ENABLE_INTERRUPTS;       //开总中断
  63:srcc/isr.c    **** }
 173              		.loc 1 63 0
 174 0032 02B0     		add	sp, sp, #8
 175              		@ sp needed
 176 0034 10BD     		pop	{r4, pc}
 177              	.L6:
 178 0036 C046     		.align	2
 179              	.L5:
 180 0038 00000000 		.word	bios_fun_point
 181              		.cfi_endproc
 182              	.LFE40:
 184              		.section	.text.SPIA_Handler,"ax",%progbits
 185              		.align	1
 186              		.weak	SPIA_Handler
 187              		.syntax unified
 188              		.code	16
 189              		.thumb_func
 190              		.fpu softvfp
 192              	SPIA_Handler:
 193              	.LFB41:
  64:srcc/isr.c    **** 
  65:srcc/isr.c    **** 
  66:srcc/isr.c    **** //======================================================================
  67:srcc/isr.c    **** //程序名称：SPIA接收中断处理程序
  68:srcc/isr.c    **** //触发条件：SPIA收到数据触发
  69:srcc/isr.c    **** //======================================================================
  70:srcc/isr.c    **** void SPIA_Handler(void)
  71:srcc/isr.c    **** {
 194              		.loc 1 71 0
 195              		.cfi_startproc
 196              		@ args = 0, pretend = 0, frame = 0
 197              		@ frame_needed = 0, uses_anonymous_args = 0
 198              		@ link register save eliminated.
 199              	.LBB62:
 200              	.LBB63:
 201              		.loc 2 344 0
 202              		.syntax divided
 203              	@ 344 "E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)
 204 0000 72B6     		cpsid i
 205              	@ 0 "" 2
 206              		.thumb
 207              		.syntax unified
 208              	.LBE63:
 209              	.LBE62:
 210              	.LBB64:
 211              	.LBB65:
 333:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** }
 212              		.loc 2 333 0
 213              		.syntax divided
 214              	@ 333 "E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)
 215 0002 62B6     		cpsie i
 216              	@ 0 "" 2
 217              		.thumb
 218              		.syntax unified
 219              	.LBE65:
 220              	.LBE64:
  72:srcc/isr.c    **** 	DISABLE_INTERRUPTS;     //关总中断
  73:srcc/isr.c    **** 	//------------------------------------------------------------------
  74:srcc/isr.c    **** 	//（在此处增加功能）
  75:srcc/isr.c    **** 
  76:srcc/isr.c    **** 	//------------------------------------------------------------------
  77:srcc/isr.c    **** 	ENABLE_INTERRUPTS;     //关总中断
  78:srcc/isr.c    **** }
 221              		.loc 1 78 0
 222              		@ sp needed
 223 0004 7047     		bx	lr
 224              		.cfi_endproc
 225              	.LFE41:
 227              		.section	.text.SPIB_Handler,"ax",%progbits
 228              		.align	1
 229              		.weak	SPIB_Handler
 230              		.syntax unified
 231              		.code	16
 232              		.thumb_func
 233              		.fpu softvfp
 235              	SPIB_Handler:
 236              	.LFB42:
  79:srcc/isr.c    **** 
  80:srcc/isr.c    **** //======================================================================
  81:srcc/isr.c    **** //程序名称：SPIA接收中断处理程序
  82:srcc/isr.c    **** //触发条件：SPIA收到数据触发
  83:srcc/isr.c    **** //======================================================================
  84:srcc/isr.c    **** void SPIB_Handler(void)
  85:srcc/isr.c    **** {
 237              		.loc 1 85 0
 238              		.cfi_startproc
 239              		@ args = 0, pretend = 0, frame = 0
 240              		@ frame_needed = 0, uses_anonymous_args = 0
 241              		@ link register save eliminated.
 242              	.LBB66:
 243              	.LBB67:
 244              		.loc 2 344 0
 245              		.syntax divided
 246              	@ 344 "E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)
 247 0000 72B6     		cpsid i
 248              	@ 0 "" 2
 249              		.thumb
 250              		.syntax unified
 251              	.LBE67:
 252              	.LBE66:
 253              	.LBB68:
 254              	.LBB69:
 333:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** }
 255              		.loc 2 333 0
 256              		.syntax divided
 257              	@ 333 "E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)
 258 0002 62B6     		cpsie i
 259              	@ 0 "" 2
 260              		.thumb
 261              		.syntax unified
 262              	.LBE69:
 263              	.LBE68:
  86:srcc/isr.c    **** 	DISABLE_INTERRUPTS;     //关总中断
  87:srcc/isr.c    **** 	//------------------------------------------------------------------
  88:srcc/isr.c    **** 	//（在此处增加功能）
  89:srcc/isr.c    **** 
  90:srcc/isr.c    **** 	//------------------------------------------------------------------
  91:srcc/isr.c    **** 	ENABLE_INTERRUPTS;     //关总中断
  92:srcc/isr.c    **** }
 264              		.loc 1 92 0
 265              		@ sp needed
 266 0004 7047     		bx	lr
 267              		.cfi_endproc
 268              	.LFE42:
 270              		.section	.text.I2CA_Handler,"ax",%progbits
 271              		.align	1
 272              		.weak	I2CA_Handler
 273              		.syntax unified
 274              		.code	16
 275              		.thumb_func
 276              		.fpu softvfp
 278              	I2CA_Handler:
 279              	.LFB43:
  93:srcc/isr.c    **** 
  94:srcc/isr.c    **** //======================================================================
  95:srcc/isr.c    **** //程序名称：I2CA接收中断处理程序
  96:srcc/isr.c    **** //触发条件：I2CA收到数据触发
  97:srcc/isr.c    **** //======================================================================
  98:srcc/isr.c    **** void I2CA_Handler(void)
  99:srcc/isr.c    **** {
 280              		.loc 1 99 0
 281              		.cfi_startproc
 282              		@ args = 0, pretend = 0, frame = 0
 283              		@ frame_needed = 0, uses_anonymous_args = 0
 284              		@ link register save eliminated.
 285              	.LBB70:
 286              	.LBB71:
 287              		.loc 2 344 0
 288              		.syntax divided
 289              	@ 344 "E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)
 290 0000 72B6     		cpsid i
 291              	@ 0 "" 2
 292              		.thumb
 293              		.syntax unified
 294              	.LBE71:
 295              	.LBE70:
 296              	.LBB72:
 297              	.LBB73:
 333:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** }
 298              		.loc 2 333 0
 299              		.syntax divided
 300              	@ 333 "E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)
 301 0002 62B6     		cpsie i
 302              	@ 0 "" 2
 303              		.thumb
 304              		.syntax unified
 305              	.LBE73:
 306              	.LBE72:
 100:srcc/isr.c    **** 	DISABLE_INTERRUPTS;     //关总中断
 101:srcc/isr.c    **** 	//------------------------------------------------------------------
 102:srcc/isr.c    **** 	//（在此处增加功能）
 103:srcc/isr.c    **** 
 104:srcc/isr.c    **** 	//------------------------------------------------------------------
 105:srcc/isr.c    **** 	ENABLE_INTERRUPTS;     //关总中断
 106:srcc/isr.c    **** }
 307              		.loc 1 106 0
 308              		@ sp needed
 309 0004 7047     		bx	lr
 310              		.cfi_endproc
 311              	.LFE43:
 313              		.section	.text.I2CB_Handler,"ax",%progbits
 314              		.align	1
 315              		.weak	I2CB_Handler
 316              		.syntax unified
 317              		.code	16
 318              		.thumb_func
 319              		.fpu softvfp
 321              	I2CB_Handler:
 322              	.LFB44:
 107:srcc/isr.c    **** 
 108:srcc/isr.c    **** 
 109:srcc/isr.c    **** //======================================================================
 110:srcc/isr.c    **** //程序名称：I2C1接收中断处理程序
 111:srcc/isr.c    **** //触发条件：I2CB收到数据触发
 112:srcc/isr.c    **** //======================================================================
 113:srcc/isr.c    **** void I2CB_Handler(void)
 114:srcc/isr.c    **** {
 323              		.loc 1 114 0
 324              		.cfi_startproc
 325              		@ args = 0, pretend = 0, frame = 0
 326              		@ frame_needed = 0, uses_anonymous_args = 0
 327              		@ link register save eliminated.
 328              	.LBB74:
 329              	.LBB75:
 330              		.loc 2 344 0
 331              		.syntax divided
 332              	@ 344 "E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)
 333 0000 72B6     		cpsid i
 334              	@ 0 "" 2
 335              		.thumb
 336              		.syntax unified
 337              	.LBE75:
 338              	.LBE74:
 339              	.LBB76:
 340              	.LBB77:
 333:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** }
 341              		.loc 2 333 0
 342              		.syntax divided
 343              	@ 333 "E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)
 344 0002 62B6     		cpsie i
 345              	@ 0 "" 2
 346              		.thumb
 347              		.syntax unified
 348              	.LBE77:
 349              	.LBE76:
 115:srcc/isr.c    **** 	DISABLE_INTERRUPTS;     //关总中断
 116:srcc/isr.c    **** 	//------------------------------------------------------------------
 117:srcc/isr.c    **** 	//（在此处增加功能）
 118:srcc/isr.c    **** 
 119:srcc/isr.c    **** 	//------------------------------------------------------------------
 120:srcc/isr.c    **** 	ENABLE_INTERRUPTS;     //关总中断
 121:srcc/isr.c    **** }
 350              		.loc 1 121 0
 351              		@ sp needed
 352 0004 7047     		bx	lr
 353              		.cfi_endproc
 354              	.LFE44:
 356              		.section	.text.TSI_Handler,"ax",%progbits
 357              		.align	1
 358              		.weak	TSI_Handler
 359              		.syntax unified
 360              		.code	16
 361              		.thumb_func
 362              		.fpu softvfp
 364              	TSI_Handler:
 365              	.LFB45:
 122:srcc/isr.c    **** 
 123:srcc/isr.c    **** 
 124:srcc/isr.c    **** 
 125:srcc/isr.c    **** //======================================================================
 126:srcc/isr.c    **** //程序名称：TSI中断处理程序
 127:srcc/isr.c    **** //触发条件：TSI通道超值中断，可设置其触发阈值的上下限，当TSI通道计数器超出
 128:srcc/isr.c    **** //         阈值范围时触发此中断
 129:srcc/isr.c    **** //======================================================================
 130:srcc/isr.c    **** void TSI_Handler(void)
 131:srcc/isr.c    **** {
 366              		.loc 1 131 0
 367              		.cfi_startproc
 368              		@ args = 0, pretend = 0, frame = 16
 369              		@ frame_needed = 0, uses_anonymous_args = 0
 370 0000 00B5     		push	{lr}
 371              		.cfi_def_cfa_offset 4
 372              		.cfi_offset 14, -4
 373 0002 87B0     		sub	sp, sp, #28
 374              		.cfi_def_cfa_offset 32
 375              	.LBB78:
 376              	.LBB79:
 377              		.loc 2 344 0
 378              		.syntax divided
 379              	@ 344 "E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)
 380 0004 72B6     		cpsid i
 381              	@ 0 "" 2
 382              		.thumb
 383              		.syntax unified
 384              	.LBE79:
 385              	.LBE78:
 132:srcc/isr.c    **** 	//存放数值的临时变量
 133:srcc/isr.c    **** 	uint_16 i;
 134:srcc/isr.c    **** 	uint_8 touchNum[10];
 135:srcc/isr.c    **** 	DISABLE_INTERRUPTS;                        //关总中断
 136:srcc/isr.c    **** 	//------------------------------------------------------------------
 137:srcc/isr.c    **** 	//（在此处增加功能）
 138:srcc/isr.c    **** 	if(tsi_get_int(TSI_TOUCH))     //若为TSI超值中断
 386              		.loc 1 138 0
 387 0006 0320     		movs	r0, #3
 388 0008 FFF7FEFF 		bl	tsi_get_int
 389              	.LVL3:
 390 000c 0028     		cmp	r0, #0
 391 000e 05D1     		bne	.L13
 392              	.L12:
 139:srcc/isr.c    **** 	{
 140:srcc/isr.c    **** 											   //获取计数值
 141:srcc/isr.c    **** 		i = tsi_get_value(TSI_TOUCH);//读取计数寄存器中的值;
 142:srcc/isr.c    **** 		if(i>500)                              //判断是否为一次有效触摸
 143:srcc/isr.c    **** 		{
 144:srcc/isr.c    **** 			gUserData.touchNum++;
 145:srcc/isr.c    **** 			LCD_ShowString(36,189,BLUE,GRAY,   //LCD上显示TSI触摸次数
 146:srcc/isr.c    **** 					(uint_8 *)IntConvertToStr(gUserData.touchNum,touchNum));
 147:srcc/isr.c    **** 		}
 148:srcc/isr.c    **** 	}
 149:srcc/isr.c    **** 	tsi_clear_int(TSI_TOUCH);
 393              		.loc 1 149 0
 394 0010 0320     		movs	r0, #3
 395 0012 FFF7FEFF 		bl	tsi_clear_int
 396              	.LVL4:
 397              	.LBB80:
 398              	.LBB81:
 333:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** }
 399              		.loc 2 333 0
 400              		.syntax divided
 401              	@ 333 "E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)
 402 0016 62B6     		cpsie i
 403              	@ 0 "" 2
 404              		.thumb
 405              		.syntax unified
 406              	.LBE81:
 407              	.LBE80:
 150:srcc/isr.c    **** 	//------------------------------------------------------------------
 151:srcc/isr.c    **** 	ENABLE_INTERRUPTS;                        //开总中断
 152:srcc/isr.c    **** }
 408              		.loc 1 152 0
 409 0018 07B0     		add	sp, sp, #28
 410              		@ sp needed
 411 001a 00BD     		pop	{pc}
 412              	.L13:
 141:srcc/isr.c    **** 		if(i>500)                              //判断是否为一次有效触摸
 413              		.loc 1 141 0
 414 001c 0320     		movs	r0, #3
 415 001e FFF7FEFF 		bl	tsi_get_value
 416              	.LVL5:
 142:srcc/isr.c    **** 		{
 417              		.loc 1 142 0
 418 0022 FA23     		movs	r3, #250
 419 0024 5B00     		lsls	r3, r3, #1
 420 0026 9842     		cmp	r0, r3
 421 0028 F2D9     		bls	.L12
 144:srcc/isr.c    **** 			LCD_ShowString(36,189,BLUE,GRAY,   //LCD上显示TSI触摸次数
 422              		.loc 1 144 0
 423 002a 0C4B     		ldr	r3, .L14
 424 002c E822     		movs	r2, #232
 425 002e 995C     		ldrb	r1, [r3, r2]
 426 0030 E920     		movs	r0, #233
 427              	.LVL6:
 428 0032 185C     		ldrb	r0, [r3, r0]
 429 0034 0002     		lsls	r0, r0, #8
 430 0036 0843     		orrs	r0, r1
 431 0038 0130     		adds	r0, r0, #1
 432 003a 80B2     		uxth	r0, r0
 433 003c 9854     		strb	r0, [r3, r2]
 434 003e 020A     		lsrs	r2, r0, #8
 435 0040 E833     		adds	r3, r3, #232
 436 0042 5A70     		strb	r2, [r3, #1]
 146:srcc/isr.c    **** 		}
 437              		.loc 1 146 0
 438 0044 03A9     		add	r1, sp, #12
 439 0046 FFF7FEFF 		bl	IntConvertToStr
 440              	.LVL7:
 145:srcc/isr.c    **** 					(uint_8 *)IntConvertToStr(gUserData.touchNum,touchNum));
 441              		.loc 1 145 0
 442 004a 0090     		str	r0, [sp]
 443 004c 044B     		ldr	r3, .L14+4
 444 004e 1F22     		movs	r2, #31
 445 0050 BD21     		movs	r1, #189
 446 0052 2420     		movs	r0, #36
 447 0054 FFF7FEFF 		bl	LCD_ShowString
 448              	.LVL8:
 449 0058 DAE7     		b	.L12
 450              	.L15:
 451 005a C046     		.align	2
 452              	.L14:
 453 005c 00000000 		.word	gUserData
 454 0060 30840000 		.word	33840
 455              		.cfi_endproc
 456              	.LFE45:
 458              		.section	.text.INCAP_Handler,"ax",%progbits
 459              		.align	1
 460              		.weak	INCAP_Handler
 461              		.syntax unified
 462              		.code	16
 463              		.thumb_func
 464              		.fpu softvfp
 466              	INCAP_Handler:
 467              	.LFB46:
 153:srcc/isr.c    **** 
 154:srcc/isr.c    **** //======================================================================
 155:srcc/isr.c    **** //程序名称：输入捕捉（TPM0)中断处理程序
 156:srcc/isr.c    **** //触发条件：TPM0模块的通道引脚捕捉到初始化时设定的电平变化信号时触发（输入捕捉）
 157:srcc/isr.c    **** //======================================================================
 158:srcc/isr.c    **** void INCAP_Handler(void)
 159:srcc/isr.c    **** {
 468              		.loc 1 159 0
 469              		.cfi_startproc
 470              		@ args = 0, pretend = 0, frame = 0
 471              		@ frame_needed = 0, uses_anonymous_args = 0
 472              		@ link register save eliminated.
 473              	.LBB82:
 474              	.LBB83:
 475              		.loc 2 344 0
 476              		.syntax divided
 477              	@ 344 "E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)
 478 0000 72B6     		cpsid i
 479              	@ 0 "" 2
 480              		.thumb
 481              		.syntax unified
 482              	.LBE83:
 483              	.LBE82:
 484              	.LBB84:
 485              	.LBB85:
 333:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** }
 486              		.loc 2 333 0
 487              		.syntax divided
 488              	@ 333 "E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)
 489 0002 62B6     		cpsie i
 490              	@ 0 "" 2
 491              		.thumb
 492              		.syntax unified
 493              	.LBE85:
 494              	.LBE84:
 160:srcc/isr.c    **** 	DISABLE_INTERRUPTS;     //关总中断
 161:srcc/isr.c    **** 	//------------------------------------------------------------------
 162:srcc/isr.c    **** 	//（在此处增加功能）
 163:srcc/isr.c    **** 
 164:srcc/isr.c    **** 	//------------------------------------------------------------------
 165:srcc/isr.c    **** 	ENABLE_INTERRUPTS;     //关总中断
 166:srcc/isr.c    **** }
 495              		.loc 1 166 0
 496              		@ sp needed
 497 0004 7047     		bx	lr
 498              		.cfi_endproc
 499              	.LFE46:
 501              		.section	.text.TIMERA_Handler,"ax",%progbits
 502              		.align	1
 503              		.weak	TIMERA_Handler
 504              		.syntax unified
 505              		.code	16
 506              		.thumb_func
 507              		.fpu softvfp
 509              	TIMERA_Handler:
 510              	.LFB47:
 167:srcc/isr.c    **** 
 168:srcc/isr.c    **** //======================================================================
 169:srcc/isr.c    **** //程序名称：TIMERA_Handler（TIMERA模块中断处理程序）
 170:srcc/isr.c    **** //触发条件：定时器计时达到初始化时设置的计时间隔时，触发定时器溢出中断
 171:srcc/isr.c    **** //======================================================================
 172:srcc/isr.c    **** void TIMERA_Handler(void)
 173:srcc/isr.c    **** {
 511              		.loc 1 173 0
 512              		.cfi_startproc
 513              		@ args = 0, pretend = 0, frame = 0
 514              		@ frame_needed = 0, uses_anonymous_args = 0
 515 0000 10B5     		push	{r4, lr}
 516              		.cfi_def_cfa_offset 8
 517              		.cfi_offset 4, -8
 518              		.cfi_offset 14, -4
 519              	.LBB86:
 520              	.LBB87:
 521              		.loc 2 344 0
 522              		.syntax divided
 523              	@ 344 "E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)
 524 0002 72B6     		cpsid i
 525              	@ 0 "" 2
 526              		.thumb
 527              		.syntax unified
 528              	.LBE87:
 529              	.LBE86:
 174:srcc/isr.c    **** 	DISABLE_INTERRUPTS;                       //关总中断
 175:srcc/isr.c    **** 	//------------------------------------------------------------------
 176:srcc/isr.c    **** 	//（在此处增加功能）
 177:srcc/isr.c    **** 	timer_clear_int(TIMER_LP);                //清中断标志
 530              		.loc 1 177 0
 531 0004 0020     		movs	r0, #0
 532 0006 FFF7FEFF 		bl	timer_clear_int
 533              	.LVL9:
 178:srcc/isr.c    **** 	tsi_search(TSI_TOUCH);                             //触发一次TSI扫描
 534              		.loc 1 178 0
 535 000a 0320     		movs	r0, #3
 536 000c FFF7FEFF 		bl	tsi_search
 537              	.LVL10:
 538              	.LBB88:
 539              	.LBB89:
 333:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** }
 540              		.loc 2 333 0
 541              		.syntax divided
 542              	@ 333 "E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)
 543 0010 62B6     		cpsie i
 544              	@ 0 "" 2
 545              		.thumb
 546              		.syntax unified
 547              	.LBE89:
 548              	.LBE88:
 179:srcc/isr.c    **** 	//------------------------------------------------------------------
 180:srcc/isr.c    ****     ENABLE_INTERRUPTS;                        //开总中断
 181:srcc/isr.c    **** }
 549              		.loc 1 181 0
 550              		@ sp needed
 551 0012 10BD     		pop	{r4, pc}
 552              		.cfi_endproc
 553              	.LFE47:
 555              		.section	.text.TIMERB_Handler,"ax",%progbits
 556              		.align	1
 557              		.weak	TIMERB_Handler
 558              		.syntax unified
 559              		.code	16
 560              		.thumb_func
 561              		.fpu softvfp
 563              	TIMERB_Handler:
 564              	.LFB48:
 182:srcc/isr.c    **** 
 183:srcc/isr.c    **** //======================================================================
 184:srcc/isr.c    **** //程序名称：TIMERB_Handler（TIMERB模块中断处理程序）
 185:srcc/isr.c    **** //触发条件：定时器计时达到初始化时设置的计时间隔时，触发定时器溢出中断
 186:srcc/isr.c    **** //======================================================================
 187:srcc/isr.c    **** void TIMERB_Handler(void)
 188:srcc/isr.c    **** {
 565              		.loc 1 188 0
 566              		.cfi_startproc
 567              		@ args = 0, pretend = 0, frame = 0
 568              		@ frame_needed = 0, uses_anonymous_args = 0
 569              		@ link register save eliminated.
 570              	.LBB90:
 571              	.LBB91:
 572              		.loc 2 344 0
 573              		.syntax divided
 574              	@ 344 "E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)
 575 0000 72B6     		cpsid i
 576              	@ 0 "" 2
 577              		.thumb
 578              		.syntax unified
 579              	.LBE91:
 580              	.LBE90:
 581              	.LBB92:
 582              	.LBB93:
 333:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** }
 583              		.loc 2 333 0
 584              		.syntax divided
 585              	@ 333 "E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)
 586 0002 62B6     		cpsie i
 587              	@ 0 "" 2
 588              		.thumb
 589              		.syntax unified
 590              	.LBE93:
 591              	.LBE92:
 189:srcc/isr.c    **** 	DISABLE_INTERRUPTS;                        //关总中断
 190:srcc/isr.c    **** 	//------------------------------------------------------------------
 191:srcc/isr.c    **** 	//（在此处增加功能）
 192:srcc/isr.c    **** 
 193:srcc/isr.c    **** 	//------------------------------------------------------------------
 194:srcc/isr.c    **** 	ENABLE_INTERRUPTS;                        //开总中断
 195:srcc/isr.c    **** }
 592              		.loc 1 195 0
 593              		@ sp needed
 594 0004 7047     		bx	lr
 595              		.cfi_endproc
 596              	.LFE48:
 598              		.section	.text.TIMERC_Handler,"ax",%progbits
 599              		.align	1
 600              		.global	TIMERC_Handler
 601              		.syntax unified
 602              		.code	16
 603              		.thumb_func
 604              		.fpu softvfp
 606              	TIMERC_Handler:
 607              	.LFB49:
 196:srcc/isr.c    **** 
 197:srcc/isr.c    **** 
 198:srcc/isr.c    **** //======================================================================
 199:srcc/isr.c    **** //程序名称：TIMERC_Handler（TIMERC模块中断处理程序）
 200:srcc/isr.c    **** //触发条件：定时器计时达到初始化时设置的计时间隔时，触发定时器溢出中断
 201:srcc/isr.c    **** //======================================================================
 202:srcc/isr.c    **** void TIMERC_Handler(void)
 203:srcc/isr.c    **** {
 608              		.loc 1 203 0
 609              		.cfi_startproc
 610              		@ args = 0, pretend = 0, frame = 0
 611              		@ frame_needed = 0, uses_anonymous_args = 0
 612              		@ link register save eliminated.
 613              	.LBB94:
 614              	.LBB95:
 615              		.loc 2 344 0
 616              		.syntax divided
 617              	@ 344 "E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)
 618 0000 72B6     		cpsid i
 619              	@ 0 "" 2
 620              		.thumb
 621              		.syntax unified
 622              	.LBE95:
 623              	.LBE94:
 624              	.LBB96:
 625              	.LBB97:
 333:E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)(A.50)-190816\02_Core\core_cmFunc.h **** }
 626              		.loc 2 333 0
 627              		.syntax divided
 628              	@ 333 "E:\AHL-AN10-Kit01\AHL-AN10-Kit01(V2.0)-190817\04-Software\01-UE\USER\User_NB-IoT_Frame(KL36)
 629 0002 62B6     		cpsie i
 630              	@ 0 "" 2
 631              		.thumb
 632              		.syntax unified
 633              	.LBE97:
 634              	.LBE96:
 204:srcc/isr.c    **** 	DISABLE_INTERRUPTS;                        //关总中断
 205:srcc/isr.c    **** 	//------------------------------------------------------------------
 206:srcc/isr.c    **** 	//（在此处增加功能）
 207:srcc/isr.c    **** 
 208:srcc/isr.c    **** 	//------------------------------------------------------------------
 209:srcc/isr.c    **** 	ENABLE_INTERRUPTS;                        //开总中断
 210:srcc/isr.c    **** }
 635              		.loc 1 210 0
 636              		@ sp needed
 637 0004 7047     		bx	lr
 638              		.cfi_endproc
 639              	.LFE49:
 641              		.comm	gRecvLength,2,2
 642              		.comm	gRecvBuf,1024,4
 643              		.comm	gTimeString,20,4
 644              		.comm	gTimeSec,8,8
 645              		.comm	gFlashData,173,4
 646              		.comm	gUserData,279,4
 647              		.comm	bios_fun_point,4,4
 648              		.text
 649              	.Letext0:
 650              		.file 3 "d:\\arm-aupulu\\bin\\armcompilefile\\arm-none-eabi\\include\\machine\\_default_types.h"
 651              		.file 4 "d:\\arm-aupulu\\bin\\armcompilefile\\arm-none-eabi\\include\\sys\\_stdint.h"
 652              		.file 5 "E:\\AHL-AN10-Kit01\\AHL-AN10-Kit01(V2.0)-190817\\04-Software\\01-UE\\USER\\User_NB-IoT_Fr
 653              		.file 6 "E:\\AHL-AN10-Kit01\\AHL-AN10-Kit01(V2.0)-190817\\04-Software\\01-UE\\USER\\User_NB-IoT_Fr
 654              		.file 7 "E:\\AHL-AN10-Kit01\\AHL-AN10-Kit01(V2.0)-190817\\04-Software\\01-UE\\USER\\User_NB-IoT_Fr
 655              		.file 8 "d:\\arm-aupulu\\bin\\armcompilefile\\arm-none-eabi\\include\\sys\\lock.h"
 656              		.file 9 "d:\\arm-aupulu\\bin\\armcompilefile\\arm-none-eabi\\include\\sys\\_types.h"
 657              		.file 10 "d:\\arm-aupulu\\bin\\armcompilefile\\lib\\gcc\\arm-none-eabi\\7.2.1\\include\\stddef.h"
 658              		.file 11 "d:\\arm-aupulu\\bin\\armcompilefile\\arm-none-eabi\\include\\sys\\reent.h"
 659              		.file 12 "E:\\AHL-AN10-Kit01\\AHL-AN10-Kit01(V2.0)-190817\\04-Software\\01-UE\\USER\\User_NB-IoT_F
 660              		.file 13 "E:\\AHL-AN10-Kit01\\AHL-AN10-Kit01(V2.0)-190817\\04-Software\\01-UE\\USER\\User_NB-IoT_F
 661              		.file 14 "E:\\AHL-AN10-Kit01\\AHL-AN10-Kit01(V2.0)-190817\\04-Software\\01-UE\\USER\\User_NB-IoT_F
 662              		.file 15 "E:\\AHL-AN10-Kit01\\AHL-AN10-Kit01(V2.0)-190817\\04-Software\\01-UE\\USER\\User_NB-IoT_F
 663              		.file 16 "E:\\AHL-AN10-Kit01\\AHL-AN10-Kit01(V2.0)-190817\\04-Software\\01-UE\\USER\\User_NB-IoT_F
DEFINED SYMBOLS
                            *ABS*:00000000 isr.c
C:\Users\WYH\AppData\Local\Temp\ccYVzfOe.s:16     .text.GPIOA_Handler:00000000 $t
C:\Users\WYH\AppData\Local\Temp\ccYVzfOe.s:23     .text.GPIOA_Handler:00000000 GPIOA_Handler
C:\Users\WYH\AppData\Local\Temp\ccYVzfOe.s:61     .text.GPIOB_Handler:00000000 $t
C:\Users\WYH\AppData\Local\Temp\ccYVzfOe.s:68     .text.GPIOB_Handler:00000000 GPIOB_Handler
C:\Users\WYH\AppData\Local\Temp\ccYVzfOe.s:104    .text.UARTA_Handler:00000000 $t
C:\Users\WYH\AppData\Local\Temp\ccYVzfOe.s:111    .text.UARTA_Handler:00000000 UARTA_Handler
C:\Users\WYH\AppData\Local\Temp\ccYVzfOe.s:180    .text.UARTA_Handler:00000038 $d
                            *COM*:00000004 bios_fun_point
C:\Users\WYH\AppData\Local\Temp\ccYVzfOe.s:185    .text.SPIA_Handler:00000000 $t
C:\Users\WYH\AppData\Local\Temp\ccYVzfOe.s:192    .text.SPIA_Handler:00000000 SPIA_Handler
C:\Users\WYH\AppData\Local\Temp\ccYVzfOe.s:228    .text.SPIB_Handler:00000000 $t
C:\Users\WYH\AppData\Local\Temp\ccYVzfOe.s:235    .text.SPIB_Handler:00000000 SPIB_Handler
C:\Users\WYH\AppData\Local\Temp\ccYVzfOe.s:271    .text.I2CA_Handler:00000000 $t
C:\Users\WYH\AppData\Local\Temp\ccYVzfOe.s:278    .text.I2CA_Handler:00000000 I2CA_Handler
C:\Users\WYH\AppData\Local\Temp\ccYVzfOe.s:314    .text.I2CB_Handler:00000000 $t
C:\Users\WYH\AppData\Local\Temp\ccYVzfOe.s:321    .text.I2CB_Handler:00000000 I2CB_Handler
C:\Users\WYH\AppData\Local\Temp\ccYVzfOe.s:357    .text.TSI_Handler:00000000 $t
C:\Users\WYH\AppData\Local\Temp\ccYVzfOe.s:364    .text.TSI_Handler:00000000 TSI_Handler
C:\Users\WYH\AppData\Local\Temp\ccYVzfOe.s:453    .text.TSI_Handler:0000005c $d
                            *COM*:00000117 gUserData
C:\Users\WYH\AppData\Local\Temp\ccYVzfOe.s:459    .text.INCAP_Handler:00000000 $t
C:\Users\WYH\AppData\Local\Temp\ccYVzfOe.s:466    .text.INCAP_Handler:00000000 INCAP_Handler
C:\Users\WYH\AppData\Local\Temp\ccYVzfOe.s:502    .text.TIMERA_Handler:00000000 $t
C:\Users\WYH\AppData\Local\Temp\ccYVzfOe.s:509    .text.TIMERA_Handler:00000000 TIMERA_Handler
C:\Users\WYH\AppData\Local\Temp\ccYVzfOe.s:556    .text.TIMERB_Handler:00000000 $t
C:\Users\WYH\AppData\Local\Temp\ccYVzfOe.s:563    .text.TIMERB_Handler:00000000 TIMERB_Handler
C:\Users\WYH\AppData\Local\Temp\ccYVzfOe.s:599    .text.TIMERC_Handler:00000000 $t
C:\Users\WYH\AppData\Local\Temp\ccYVzfOe.s:606    .text.TIMERC_Handler:00000000 TIMERC_Handler
                            *COM*:00000002 gRecvLength
                            *COM*:00000400 gRecvBuf
                            *COM*:00000014 gTimeString
                            *COM*:00000008 gTimeSec
                            *COM*:000000ad gFlashData
                           .group:00000000 wm4.0.6b3c261c075bbc2e3a26f120e5522d74
                           .group:00000000 wm4.common.h.8.6facd6346498fe3b182946a20345c657
                           .group:00000000 wm4.MKL36Z4.h.89.233797f6f4773763e2e98c6b40e4b5ad
                           .group:00000000 wm4._newlib_version.h.4.3572908597b70d672d181fc7fc501c19
                           .group:00000000 wm4.features.h.33.cf97d4c9a045ebab6d282f6356e11363
                           .group:00000000 wm4._default_types.h.15.247e5cd201eca3442cbf5404108c4935
                           .group:00000000 wm4._intsup.h.10.cce27fed8484c08a33f522034c30d2b5
                           .group:00000000 wm4._stdint.h.10.c24fa3af3bc1706662bb5593a907e841
                           .group:00000000 wm4.stdint.h.23.d53047a68f4a85177f80b422d52785ed
                           .group:00000000 wm4.MKL36Z4.h.102.9aa70adc1bfde53db48a5cdc9c11b855
                           .group:00000000 wm4.core_cm0plus.h.43.8d0a7c3b62d57d3de08e0cf260e796f5
                           .group:00000000 wm4.core_cmInstr.h.39.440aa208ad4c1679c5765c09acc09994
                           .group:00000000 wm4.core_cm0plus.h.160.b16144213bf005ce96482cc39658f3eb
                           .group:00000000 wm4.MKL36Z4.h.268.27ad2c3218b31878c72d973b76832d3c
                           .group:00000000 wm4.mcu.h.18.69f4b5b87d8a116f794509cd91218d13
                           .group:00000000 wm4.svc.h.9.5456cf514b156c422bc4546fad33f63e
                           .group:00000000 wm4.common.h.16.7db62d7e34981cef069189d29572a8d0
                           .group:00000000 wm4.newlib.h.8.e0fd068ed40a600f7426443f865dd469
                           .group:00000000 wm4.ieeefp.h.77.49bcce8a603f3d93a95080d6a3573782
                           .group:00000000 wm4.config.h.220.6cac6a9685cfce5e83c17784171638d9
                           .group:00000000 wm4._ansi.h.23.9f8fcfa20193763fcf364fb91705c94b
                           .group:00000000 wm4.stddef.h.39.99b5021e28f91cdb161c889e07266673
                           .group:00000000 wm4.lock.h.2.1461d1fff82dffe8bfddc23307f6484f
                           .group:00000000 wm4._types.h.125.5cf8a495f1f7ef36777ad868a1e32068
                           .group:00000000 wm4.stddef.h.161.5349cb105733e8777bfb0cf53c4e3f34
                           .group:00000000 wm4._types.h.184.7120b8bb2e0149e2359704f4e2251b68
                           .group:00000000 wm4.reent.h.17.87376802c2b370b32a762f0a30482d9e
                           .group:00000000 wm4.cdefs.h.47.b99d69adf76e00132150c6ca209cbd8f
                           .group:00000000 wm4.string.h.15.dab3980bf35408a4c507182805e2de3a
                           .group:00000000 wm4.stddef.h.161.19e15733342b50ead2919490b095303e
                           .group:00000000 wm4.adc.h.16.46085ea51e91d3cad1570882ff063879
                           .group:00000000 wm4.gpio.h.10.986b0e721a5f8dc53d90b6e6479bc010
                           .group:00000000 wm4.timer.h.9.0c2434e998dc154a3e9828da4a1f6235
                           .group:00000000 wm4.uart.h.10.bff5e701e40630e1d7de2b8037fde34b
                           .group:00000000 wm4.flash.h.10.6c61dd182e565e4eb3a9a8d3876dbdb0
                           .group:00000000 wm4.stdio.h.27.3fc80220048df77954e38daec3bb9670
                           .group:00000000 wm4.stdarg.h.34.3a23a216c0c293b3d2ea2e89281481e6
                           .group:00000000 wm4.types.h.40.e8c16e7ec36ba55f133d0616070e25fc
                           .group:00000000 wm4.types.h.114.fb65732f4f5f288a036a25898de2c91f
                           .group:00000000 wm4.stdio.h.2.4aa87247282eca6c8f36f9de33d8df1a
                           .group:00000000 wm4.stdio.h.81.2a55589bfa3ee24eeb84e3c79458e4a9
                           .group:00000000 wm4.stdlib.h.13.4ed386f5c1a80d71e72172885d946ef2
                           .group:00000000 wm4.stdlib.h.56.b4ddaf162082f284ba35b4444af99a9a
                           .group:00000000 wm4.uecom.h.31.34c033455bb0111d79414f629e02f44f
                           .group:00000000 wm4.gec.h.47.b03261d3256f000bba71e6d32e104a70
                           .group:00000000 wm4.printf.h.2.493aaa82044ebe79719bfb3e8ed3fd79
                           .group:00000000 wm4.lcd.h.2.9f31459a7cada666e5dec916ed74d713
                           .group:00000000 wm4.user.h.19.9a5f0b0cf9510e73e5d38fa500f70ec0
                           .group:00000000 wm4.time.h.8.db4619001f026d0b4874c029fef0e91f
                           .group:00000000 wm4.time.h.2.4581ce0ffb6627cfc02162c94bf846c9
                           .group:00000000 wm4.time.h.25.0e6a0fdbc9955f5707ed54246ed2e089
                           .group:00000000 wm4.time.h.243.a9f48603a5d5dd23632068f19327a890
                           .group:00000000 wm4.includes.h.23.0ee9abd09da1e58b86e4885ecba18e18

UNDEFINED SYMBOLS
tsi_get_int
tsi_clear_int
tsi_get_value
IntConvertToStr
LCD_ShowString
timer_clear_int
tsi_search
